{"version":3,"sources":["Functions.js"],"names":[],"mappings":";;;AAGA,YAAY,CAAC;;;;;;;;;;;;;AAab,SAAS,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC;;AAEX,QAAI,KAAK,GAAG,EAAE,CAAC;;AAEf,aAAS,QAAQ,GAAE;AACf,eAAO,CAAC,GAAG,kBAAgB,CAAC,YAAO,CAAC,gBAAW,KAAK,CAAG,CAAC;AACxD,UAAE,KAAK,CAAC,AAAC,EAAE,CAAC,CAAC,AAAC,EAAE,CAAC,CAAC;;;;;;;KAOrB;;;AAGD,WAAO,QAAQ,CAAC;CACnB;;;AAGD,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;AACjB,IAAI,IAAI,GAAG,CAAC,CAAC,EAAE,EAAC,EAAE,CAAC,CAAC;;AAEpB,GAAG,EAAE,CAAC;AACN,IAAI,EAAE,CAAC;AACP,GAAG,EAAE,CAAC","file":"Functions-compiled.js","sourcesContent":["/**\r\n * Created by cconstantino on 30-09-2015.\r\n */\r\n\"use strict\";\r\n\r\n//Crie-se uma fun��o, nome f\r\n//Como uma declara��o de uma fun��o � uma instru��o e uma fun��o contem instru��es,\r\n//podemos ter fun��es dentro de fun��es\r\n//o scope da Fun��o inicia-se quando � invocada\r\n//quando a fun��o termina, deixa-se de ter acesso �s suas propriedades\r\n//o que o contexto tem:\r\n// - parametros\r\n// - this\r\n// - todas as vari�veis locais\r\n//--> o contexto s� � limpo quando a vari�vel que referencia a fun��o deixa de a referenciar.\r\n//--> ter cuidado.... tem que se limpar as vari�veis, caso contr�rio vai ficando mem�ria presa para nada\r\nfunction f(a,b){\r\n    //pode ser usada em todo o contexto em que foi definido.\r\n    var local = 10;\r\n\r\n    function internal(){\r\n        console.log(`internal: a:${a}; b:${b}; local:${local}`);\r\n        ++local; ++a; ++b;\r\n\r\n        //tem acesso a todos os contextos at� ao contexto global\r\n        //function moreinternalyet(){\r\n        //    console.log(\"more internal yet\");\r\n        //}\r\n        //return moreinternalyet;\r\n    }\r\n\r\n    //retorna a referencia para a fun��o\r\n    return internal;\r\n}\r\n\r\n//Chamar a fun��o\r\nvar ret = f(5,6);\r\nvar ret2 = f(10,20);\r\n\r\nret();      //internal: a:5; b:6; local:10\r\nret2();     //internal: a:10; b:20; local:10\r\nret();      //internal: a:6; b:7; local:11\r\n"]}
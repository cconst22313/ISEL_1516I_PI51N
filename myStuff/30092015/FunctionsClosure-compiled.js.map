{"version":3,"sources":["FunctionsClosure.js"],"names":[],"mappings":";;;AAGA,YAAY,CAAC;;;;;;;;;;;;;AAab,SAAS,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC;;AAEX,QAAI,KAAK,GAAG,EAAE,CAAC;;AAEf,QAAI,CAAC,GAAE,EAAE,CAAC;;;AAGV,SAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAC,EAAE,EAAE,EAAE,CAAC,EAAC;AACrB,SAAC,CAAC,CAAC,CAAC,GAAG,YAAU;AAAE,mBAAO,CAAC,CAAC;SAAE,CAAC;KAClC;AACD,WAAO,CAAC,CAAC;CACZ;AACD,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC;;;;AAIf,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAC;AAC9B,WAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;CAC1B;;;;;AAKD,SAAS,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC;;AAEZ,QAAI,KAAK,GAAG,EAAE,CAAC;;AAEf,QAAI,CAAC,GAAE,EAAE,CAAC;;;;AAIV,SAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAC,EAAE,EAAE,EAAE,CAAC,EAAC;AACrB,SAAC,CAAC,CAAC,CAAC,GAAG,CAAA,UAAS,GAAG,EAAC;;AAChB,mBAAO,YAAU;;AACb,uBAAO,GAAG,CAAC;aACd,CAAA;SACJ,CAAA,CAAC,CAAC,CAAC,CAAC;KACR;AACD,WAAO,CAAC,CAAC;CACZ;AACD,IAAI,KAAK,GAAG,EAAE,EAAE,CAAC;;;;AAIjB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAC;AAC/B,WAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;CAC3B;;;AAID,SAAS,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC;;AAEZ,QAAI,KAAK,GAAG,EAAE,CAAC;;AAEf,QAAI,CAAC,GAAE,EAAE,CAAC;;;;0BAGF,EAAC;AACL,SAAC,CAAC,EAAC,CAAC,GAAG,YAAU;AAAE,mBAAO,EAAC,CAAC;SAAE,CAAC;;;AADnC,SAAI,IAAI,EAAC,GAAG,CAAC,EAAE,EAAC,GAAC,EAAE,EAAE,EAAE,EAAC,EAAC;cAAjB,EAAC;KAER;AACD,WAAO,CAAC,CAAC;CACZ;AACD,IAAI,KAAK,GAAG,EAAE,EAAE,CAAC;;;;AAIjB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAC;AAC/B,WAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;CAC3B","file":"FunctionsClosure-compiled.js","sourcesContent":["/**\r\n * Created by cconstantino on 30-09-2015.\r\n */\r\n\"use strict\";\r\n\r\n//Crie-se uma fun��o, nome f\r\n//Como uma declara��o de uma fun��o � uma instru��o e uma fun��o contem instru��es,\r\n//podemos ter fun��es dentro de fun��es\r\n//o scope da Fun��o inicia-se quando � invocada\r\n//quando a fun��o termina, deixa-se de ter acesso �s suas propriedades\r\n//o que o contexto tem:\r\n// - parametros\r\n// - this\r\n// - todas as vari�veis locais\r\n//--> o contexto s� � limpo quando a vari�vel que referencia a fun��o deixa de a referenciar.\r\n//--> ter cuidado.... tem que se limpar as vari�veis, caso contr�rio vai ficando mem�ria presa para nada\r\nfunction f(a,b){\r\n    //pode ser usada em todo o contexto em que foi definido.\r\n    var local = 10;\r\n    //var a = new Array();\r\n    var a =[];\r\n\r\n    //\"todos os fors que s�o necess�rios j� foram feitos\"\r\n    for(var i = 0; i<10; ++i){\r\n        a[i] = function(){ return i; };\r\n    }\r\n    return a;\r\n}\r\nvar aret = f();\r\n\r\n//vai retornar 10 10, pois o i est� no contexto da fun��o...\r\n//assim quando a fun��o f retornar, o i est� com 10... :)\r\nfor(var i = 0; i<aret.length; ++i){\r\n    console.log(aret[i]());\r\n}\r\n\r\n//como � que se conseguia ter uma sequencia de 1 a 10?\r\n//tem que se criar um novo contexto para cada i, isso consegue-se com\r\n//fun��es!\r\nfunction f2(a,b){\r\n    //pode ser usada em todo o contexto em que foi definido.\r\n    var local = 10;\r\n    //var a = new Array();\r\n    var a =[];\r\n\r\n    //\"desta forma estamos conseguimos ter uma fun��o\r\n    //diferente por cada itera��o do for\r\n    for(var i = 0; i<10; ++i){\r\n        a[i] = function(myi){   //cria uma fun��o para criar um contexto\r\n            return function(){  //serve para retornar a fun��o\r\n                return myi;\r\n            }\r\n        }(i);\r\n    }\r\n    return a;\r\n}\r\nvar aret2 = f2();\r\n\r\n//vai retornar 10 10, pois o i est� no contexto da fun��o...\r\n//assim quando a fun��o f retornar, o i est� com 10... :)\r\nfor(var i = 0; i<aret2.length; ++i){\r\n    console.log(aret2[i]());\r\n}\r\n\r\n\r\n//se for em ECMAScript 6!!!! j� tem coisas giras... no caso � ver o LET\r\nfunction f3(a,b){\r\n    //pode ser usada em todo o contexto em que foi definido.\r\n    var local = 10;\r\n    //var a = new Array();\r\n    var a =[];\r\n\r\n    //\"todos os fors que s�o necess�rios j� foram feitos\"\r\n    for(let i = 0; i<10; ++i){\r\n        a[i] = function(){ return i; };\r\n    }\r\n    return a;\r\n}\r\nvar aret3 = f3();\r\n\r\n//vai retornar 10 10, pois o i est� no contexto da fun��o...\r\n//assim quando a fun��o f retornar, o i est� com 10... :)\r\nfor(var i = 0; i<aret3.length; ++i){\r\n    console.log(aret3[i]());\r\n}\r\n"]}
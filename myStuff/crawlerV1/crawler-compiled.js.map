{"version":3,"sources":["crawler.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAiBA,YAAY,CAAC;AACb,OAAO,CAAC,MAAM,CAAC,CAAC;;;AAGhB,IAAI,OAAO,GAAI,SAAX,OAAO,CAAa,IAAI,EAAE,KAAK,EAAC;AAChC,QAAI,OAAO,GAAG,IAAI,CAAC;;AAEnB,WAAO,CAAC,IAAI,GAAG,IAAI,IAAI,qCAAqC,CAAC;AAC7D,WAAO,CAAC,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;CAC9B,CAAC;;;AAGF,OAAO,CAAC,SAAS,CAAC,KAAK,GAAG,YAAU;AAChC,WAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;;AAG9C,WAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;CACpD,CAAC;;AAEF,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,qCAAqC,EAAE,CAAC,CAAC,CAAC;AACpE,OAAO,CAAC,KAAK,EAAG,CAAC;;AAEjB,IAAI,OAAO,GAAG;AACV,QAAI,EAAE,gBAAgB;AACtB,QAAI,EAAE,EAAE;AACR,QAAI,EAAE,aAAa;CACtB,CAAC;;AAGF,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,UAAS,GAAG,EAAE;AAC5B,WAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC;CAElD,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAS,CAAC,EAAE;AACvB,WAAO,CAAC,GAAG,CAAC,aAAa,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;CAC1C,CAAC,CAAC","file":"crawler-compiled.js","sourcesContent":["/**\r\n * Created by cconstantino on 29-09-2015.\r\n */\r\n\r\n\r\n\r\n/*\r\n    Primeira abordagem a um Crawler.\r\n\r\n    Este JS ter� o objecto que tem a reposnsabilidade de come�ar com o processo.\r\n\r\n    A ser usado, pretende-se que seja qualquer coisa como:\r\n        var crawler = new Crawler(\"https://adeetc.thothapp.com/classes/PI/1516i/LI51N/info\",5);\r\n        crawler.start();\r\n\r\n */\r\n\r\n\"use strict\";\r\nrequire('http');\r\n\r\n//Defeni��o de objecto Crawler\r\nvar Crawler =  function(host, depth){\r\n    var crawler = this; //por causa do contexto de execu��o\r\n\r\n    crawler.host = host || \"https://adeetc.thothapp.com/classes\";\r\n    crawler.depth = depth || 5;\r\n};\r\n\r\n//Exetende Crawler com o m�todo start()\r\nCrawler.prototype.start = function(){\r\n    console.log(\"Start crawling \" + crawler.host);\r\n\r\n\r\n    console.log(\"Crawling endend of\" + crawler.host);\r\n};\r\n\r\nvar crawler = new Crawler(\"https://adeetc.thothapp.com/classes\", 2);\r\ncrawler.start( );\r\n\r\nvar options = {\r\n    host: 'www.google.com',\r\n    port: 80,\r\n    path: '/index.html'\r\n};\r\n\r\n\r\nvar http = require('http');\r\nhttp.get(options, function(res) {\r\n    console.log(\"Got response: \" + res.statusCode);\r\n\r\n}).on('error', function(e) {\r\n    console.log(\"Got error: \" + e.message);\r\n});\r\n\r\n\r\n"]}